{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Asset Manager Documentation About this site This website contains: requirements and design documents user guide","title":"Introduction"},{"location":"#asset-manager-documentation","text":"","title":"Asset Manager Documentation"},{"location":"#about-this-site","text":"This website contains: requirements and design documents user guide","title":"About this site"},{"location":"resources/","text":"Resources Source htps://github.com/buda-base/asset-manager Trello Project Management These resources are available only to the BDRC Team and selected observers. if you require access, please request to jimk AT tbrc DOT org Audit Tool Asset Manager Other Images Other Documents Notes from 2018-9-07 Core Requirements docs These documents are maintained in a shared Google Drive Folder, Asset Manager Asset Manager v.01 Core Requirements Asset Manager v-1.0 Asset Manager Notes Clearest statement of workflow.","title":"Resources"},{"location":"resources/#resources","text":"","title":"Resources"},{"location":"resources/#source","text":"htps://github.com/buda-base/asset-manager","title":"Source"},{"location":"resources/#trello-project-management","text":"These resources are available only to the BDRC Team and selected observers. if you require access, please request to jimk AT tbrc DOT org","title":"Trello Project Management"},{"location":"resources/#audit-tool","text":"","title":"Audit Tool"},{"location":"resources/#asset-manager","text":"","title":"Asset Manager"},{"location":"resources/#other-images","text":"","title":"Other Images"},{"location":"resources/#other-documents","text":"Notes from 2018-9-07","title":"Other Documents"},{"location":"resources/#core-requirements-docs","text":"These documents are maintained in a shared Google Drive Folder, Asset Manager Asset Manager v.01 Core Requirements Asset Manager v-1.0 Asset Manager Notes Clearest statement of workflow.","title":"Core Requirements docs"},{"location":"building/about/","text":"Asset Manager Project Requirements References Ngawang Trinley Buddhist Digital Resource Center Digitization Guidelines Design Documents: Functionality The Asset manager contains two subsystems: The Audit Tool , which BDRC will deploy to the field, for DPEs. The audit tool is a standalone application which can run on Windows 7 - 10, or Mac OS 10.12 (?) or newer. The Audit tool allows BDRC to accept or reject scanning work while the scanning staff is still present. It also allows assembling a package which the field can upload for further processing. The Asset Manager is a web application which allows BDRC to process the uploaded packages, creating content streams which: BDRC archives for preservation, the BDRC web application can view updates BDRC metadata. Audit Tool The Audit Tool use case is shown here: The audit tool supports multiple users who can submit, review, and approve or reject submissions. It also supports transferring to asset manager a package which contains both the content and the required metadata. It has limited reporting capability, as it is meant to be decentralized, and work only on standalone computers, operating on a local disk. In the diagram above, \"Run Tests\" means to run a specified set of tests to evaluate the submission's integrity. These tests include Asset Manager The Asset Manager use case is shown below: The Asset Manager provides a richer set of operations. Review Users access a dashboard which shows the processing status of collections which are awaiting processing. Test submission Perform the same tests as the Audit Tool does. Process Control Users control the image processing: launch and monitor processing workflows. Image processing Use external resources (either open source libraries, or possibly third party network APIs) to process images. Processing steps include: Determining values for the following parameters, and saving those into a recipe: optimal cropping box for the contents. a deskewing transform, to remove any effects of image or camera tilt. some limited color correction Derived image creation Create derivative file formats form the archival masters. OCR Transmit images to a web service which will return text and other metadata. Further processing for this metadata is TBD. Web deployment Deploy some of the derivative works and selected metadata to the BDRC display platforms.","title":"About"},{"location":"building/about/#asset-manager-project-requirements","text":"","title":"Asset Manager Project Requirements"},{"location":"building/about/#references","text":"Ngawang Trinley Buddhist Digital Resource Center Digitization Guidelines Design Documents:","title":"References"},{"location":"building/about/#functionality","text":"The Asset manager contains two subsystems: The Audit Tool , which BDRC will deploy to the field, for DPEs. The audit tool is a standalone application which can run on Windows 7 - 10, or Mac OS 10.12 (?) or newer. The Audit tool allows BDRC to accept or reject scanning work while the scanning staff is still present. It also allows assembling a package which the field can upload for further processing. The Asset Manager is a web application which allows BDRC to process the uploaded packages, creating content streams which: BDRC archives for preservation, the BDRC web application can view updates BDRC metadata.","title":"Functionality"},{"location":"building/about/#audit-tool","text":"The Audit Tool use case is shown here: The audit tool supports multiple users who can submit, review, and approve or reject submissions. It also supports transferring to asset manager a package which contains both the content and the required metadata. It has limited reporting capability, as it is meant to be decentralized, and work only on standalone computers, operating on a local disk. In the diagram above, \"Run Tests\" means to run a specified set of tests to evaluate the submission's integrity. These tests include","title":"Audit Tool"},{"location":"building/about/#asset-manager","text":"The Asset Manager use case is shown below: The Asset Manager provides a richer set of operations.","title":"Asset Manager"},{"location":"building/about/#review","text":"Users access a dashboard which shows the processing status of collections which are awaiting processing.","title":"Review"},{"location":"building/about/#test-submission","text":"Perform the same tests as the Audit Tool does.","title":"Test submission"},{"location":"building/about/#process-control","text":"Users control the image processing: launch and monitor processing workflows.","title":"Process Control"},{"location":"building/about/#image-processing","text":"Use external resources (either open source libraries, or possibly third party network APIs) to process images. Processing steps include: Determining values for the following parameters, and saving those into a recipe: optimal cropping box for the contents. a deskewing transform, to remove any effects of image or camera tilt. some limited color correction","title":"Image processing"},{"location":"building/about/#derived-image-creation","text":"Create derivative file formats form the archival masters.","title":"Derived image creation"},{"location":"building/about/#ocr","text":"Transmit images to a web service which will return text and other metadata. Further processing for this metadata is TBD.","title":"OCR"},{"location":"building/about/#web-deployment","text":"Deploy some of the derivative works and selected metadata to the BDRC display platforms.","title":"Web deployment"},{"location":"building/design/","text":"Asset Manager Design Goals Shareable Objects Use the same code for data entities and other processing which are common to both level processes: + Submission packages + Metadata + Test initiators + Test Results + Logs Validation Dynamic Discovery Some operations involve a set of tests against an object. Tests will be discoverable, and will be written in terms of an interface: a template which developers can use to extend the set of tests. The goal is to allow a developer to create or modify tests without a full release of the framework. These tests are best grouped by the object of the test, such as a delivery packet, a folder, or a work folder structure (e.g. files and folders)","title":"Design"},{"location":"building/design/#asset-manager-design","text":"","title":"Asset Manager Design"},{"location":"building/design/#goals","text":"","title":"Goals"},{"location":"building/design/#shareable-objects","text":"Use the same code for data entities and other processing which are common to both level processes: + Submission packages + Metadata + Test initiators + Test Results + Logs","title":"Shareable Objects"},{"location":"building/design/#validation-dynamic-discovery","text":"Some operations involve a set of tests against an object. Tests will be discoverable, and will be written in terms of an interface: a template which developers can use to extend the set of tests. The goal is to allow a developer to create or modify tests without a full release of the framework. These tests are best grouped by the object of the test, such as a delivery packet, a folder, or a work folder structure (e.g. files and folders)","title":"Validation Dynamic Discovery"}]}