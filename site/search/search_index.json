{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"asset-manager-doc/","text":"Asset Manager Project Documentation References Ngawang Trinley Buddhist Digital Resource Center Digitization Guidelines Functionality The Asset manager contains two subsystems: 1. The Audit Tool , which BDRC will deploy to the field, for DPEs. The audit tool is a standalone application which can run on Windows 7 - 10, or Mac OS 10.12 (?) or newer. The Audit tool allows BDRC to accept or reject scanning work while the scanning staff is still present. It also allows assembling a package which the field can upload for further processing. 2. The Asset Manager is a web application which allows BDRC to process the uploaded packages, creating content streams which: + BDRC archives for preservation, + the BDRC web application can view + updates BDRC metadata. Audit Tool The Audit Tool use case is shown here: Asset Manager The Asset Manager use case is shown below: Design Goals Shareable Objects Use the same code for data entities and other processing which are common to both level processes: + Submission packages + Metadata + Test initiators + Test Results + Logs Validation Dynamic Discovery Some operations involve a set of tests against an object. Tests will be discoverable, and will be written in terms of an interface: a template which developers can use to extend the set of tests. The goal is to allow a developer to create or modify tests without a full release of the framework. These tests are best grouped by the object of the test, such as a delivery packet, a folder, or a work folder structure (e.g. files and folders)","title":"Asset Manager Project Documentation"},{"location":"asset-manager-doc/#asset-manager-project-documentation","text":"","title":"Asset Manager Project Documentation"},{"location":"asset-manager-doc/#references","text":"Ngawang Trinley Buddhist Digital Resource Center Digitization Guidelines","title":"References"},{"location":"asset-manager-doc/#functionality","text":"The Asset manager contains two subsystems: 1. The Audit Tool , which BDRC will deploy to the field, for DPEs. The audit tool is a standalone application which can run on Windows 7 - 10, or Mac OS 10.12 (?) or newer. The Audit tool allows BDRC to accept or reject scanning work while the scanning staff is still present. It also allows assembling a package which the field can upload for further processing. 2. The Asset Manager is a web application which allows BDRC to process the uploaded packages, creating content streams which: + BDRC archives for preservation, + the BDRC web application can view + updates BDRC metadata.","title":"Functionality"},{"location":"asset-manager-doc/#audit-tool","text":"The Audit Tool use case is shown here:","title":"Audit Tool"},{"location":"asset-manager-doc/#asset-manager","text":"The Asset Manager use case is shown below:","title":"Asset Manager"},{"location":"asset-manager-doc/#design","text":"","title":"Design"},{"location":"asset-manager-doc/#goals","text":"","title":"Goals"},{"location":"asset-manager-doc/#shareable-objects","text":"Use the same code for data entities and other processing which are common to both level processes: + Submission packages + Metadata + Test initiators + Test Results + Logs","title":"Shareable Objects"},{"location":"asset-manager-doc/#validation-dynamic-discovery","text":"Some operations involve a set of tests against an object. Tests will be discoverable, and will be written in terms of an interface: a template which developers can use to extend the set of tests. The goal is to allow a developer to create or modify tests without a full release of the framework. These tests are best grouped by the object of the test, such as a delivery packet, a folder, or a work folder structure (e.g. files and folders)","title":"Validation Dynamic Discovery"}]}